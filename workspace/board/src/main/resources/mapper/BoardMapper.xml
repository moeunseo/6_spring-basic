<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.board.mapper.BoardMapper">
<!--  게시글 목록  가져오기 -->
    <select id="selectAll" resultType="BoardListDTO">
        SELECT *
        FROM (
                 SELECT ROWNUM AS RN, BOARD.*
                 FROM (
                          SELECT
                              B.BOARD_ID,
                              B.BOARD_TITLE,
                              U.NAME,
                              B.BOARD_VIEWS,
                              B.BOARD_REGISTER_DATE,
                              B.BOARD_UPDATE_DATE,
                              U.PROVIDER_ID,
                              (SELECT COUNT(*) FROM TBL_FILE F WHERE F.BOARD_ID = B.BOARD_ID) AS FILE_COUNT
                          FROM
                              TBL_BOARD B JOIN TBL_USERS U ON
                              U.PROVIDER_ID = B.PROVIDER_ID
                          ORDER BY
                              B.BOARD_UPDATE_DATE DESC
                      ) BOARD
                 WHERE ROWNUM &lt;= #{endRow}
             )
        WHERE rn &gt; #{startRow}
    </select>
<!--  총 게시글 갯수  -->
    <select id="countBoard" resultType="int">
        select count(*)
        from tbl_board
    </select>

<!-- 다음 시퀀스를 가져오는 쿼리문 -->
<!-- board insert 시 사용할 예정   -->
    <select id="getSeq" resultType="Long">
        select SEQ_BOARD.nextval from dual
    </select>


<!--   게시글 작성 쿼리문 -->
    <insert id="saveBoard">
        insert into tbl_board
        values (#{boardId}, #{boardTitle}, #{boardContent}, 0, sysdate, sysdate, #{providerId})
    </insert>

<!-- 게시물 상세보기 -->
    <select id="selectBoardDetail" resultType="BoardDetailDTO">
        SELECT
            B.BOARD_ID,
            B.BOARD_TITLE,
            B.BOARD_CONTENT,
            U.NAME,
            B.BOARD_VIEWS,
            B.BOARD_REGISTER_DATE,
            B.BOARD_UPDATE_DATE,
            U.PROVIDER_ID,
            (SELECT COUNT(*) FROM TBL_FILE F WHERE F.BOARD_ID = B.BOARD_ID) AS FILE_COUNT
        FROM
            TBL_BOARD B JOIN TBL_USERS U ON U.PROVIDER_ID = B.PROVIDER_ID
        where B.BOARD_ID = #{boardId}
    </select>

<!--  조회수 +1  -->
    <update id="plusView">
        update tbl_board
        set board_views = board_views + 1
        where BOARD_ID = #{boardId}
    </update>

<!-- 게시글 수정하기 -->
    <update id="updateBoard">
        update tbl_board
        set BOARD_TITLE = #{boardTitle},
            BOARD_CONTENT = #{boardContent},
            BOARD_UPDATE_DATE = sysdate
        where BOARD_ID = #{boardId}
    </update>

    <delete id="deleteBoard">
        delete from tbl_board
        where BOARD_ID = #{boardId}
    </delete>

<!-- 검색과 정렬을 페이지 이동 없이 하는 쿼리문  -->
<!-- 게시글 오래된순   -->
    <select id="selectAllByDateASC" resultType="BoardListDTO">
        SELECT *
        FROM (
                 SELECT ROWNUM AS RN, BOARD.*
                 FROM (
                          SELECT
                              B.BOARD_ID,
                              B.BOARD_TITLE,
                              U.NAME,
                              B.BOARD_VIEWS,
                              B.BOARD_REGISTER_DATE,
                              B.BOARD_UPDATE_DATE,
                              U.PROVIDER_ID,
                              (SELECT COUNT(*) FROM TBL_FILE F WHERE F.BOARD_ID = B.BOARD_ID) AS FILE_COUNT
                          FROM
                              TBL_BOARD B JOIN TBL_USERS U ON
                                  U.PROVIDER_ID = B.PROVIDER_ID
                          ORDER BY
                              B.BOARD_UPDATE_DATE ASC
                      ) BOARD
                 WHERE ROWNUM &lt;= #{endRow}
             )
        WHERE rn &gt; #{startRow}
    </select>

    <!-- 게시글 조회순   -->
<!--    <select id="selectAllByViews" resultType="BoardListDTO">-->
<!--        SELECT *-->
<!--        FROM (-->
<!--                 SELECT ROWNUM AS RN, BOARD.*-->
<!--                 FROM (-->
<!--                          SELECT-->
<!--                              B.BOARD_ID,-->
<!--                              B.BOARD_TITLE,-->
<!--                              U.NAME,-->
<!--                              B.BOARD_VIEWS,-->
<!--                              B.BOARD_REGISTER_DATE,-->
<!--                              B.BOARD_UPDATE_DATE,-->
<!--                              U.PROVIDER_ID,-->
<!--                              (SELECT COUNT(*) FROM TBL_FILE F WHERE F.BOARD_ID = B.BOARD_ID) AS FILE_COUNT-->
<!--                          FROM-->
<!--                              TBL_BOARD B JOIN TBL_USERS U ON-->
<!--                                  U.PROVIDER_ID = B.PROVIDER_ID-->
<!--                          ORDER BY-->
<!--                              B.BOARD_VIEWS DESC-->
<!--                      ) BOARD-->
<!--                 WHERE ROWNUM &lt;= #{endRow}-->
<!--             )-->
<!--        WHERE rn &gt; #{startRow}-->
<!--    </select>-->
    <!-- 동적 쿼리 -->
    <select id="selectD" resultType="BoardListDTO">
        SELECT *
        FROM (
        SELECT ROWNUM AS RN, BOARD.*
        FROM (
        SELECT
        B.BOARD_ID,
        B.BOARD_TITLE,
        U.NAME,
        B.BOARD_VIEWS,
        B.BOARD_REGISTER_DATE,
        B.BOARD_UPDATE_DATE,
        U.PROVIDER_ID,
        (SELECT COUNT(*) FROM TBL_FILE F WHERE F.BOARD_ID = B.BOARD_ID) AS FILE_COUNT
        FROM
        TBL_BOARD B JOIN TBL_USERS U
        ON
        U.PROVIDER_ID = B.PROVIDER_ID
        ORDER BY
        <choose>
            <when test="sort == 'views'">B.BOARD_VIEWS DESC</when>
            <when test="sort == 'oldest'">B.BOARD_UPDATE_DATE ASC</when>
            <otherwise>B.BOARD_UPDATE_DATE DESC</otherwise>
        </choose>
        ) BOARD
        WHERE ROWNUM &lt;= #{endRow}
        )
        WHERE rn &gt; #{startRow}
    </select>
</mapper>